library(swirl)
gl(3,10)
str(split)
library(swirl)
swirl()
Sys.Date()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986"
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() >t1
Sys.time() - t1
difftime(Sys.time(), t1, units='days')
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem elem[2]))
lapply(unique_vals, function(elem elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$landmasses, flags$population, summary)
?tapply
flags$landmasses
tapply(flags$population, flags$landmass, summary)
ls
debug(ls)
ls
ls()
ls
ls()
<
Q
quit
quit
exit
setwd("datascience"
)
getwd()
library(cachemean)
package(cachemean.R)
package("cachemean.R")
makeVector()
dir()
package("cachemean.R")
library("cachemean.R")
library(cachemean.R)
library(cachemean)
load("cachemean.R")
source("cachemean.R")
makeVector()
x <- c(1, 2, 3, 4)
makeVector(x)
cachemean(x)
x <- makeVector()
x
cachemean(x)
makeVector(c(1, 2, 3, 4, 5))
cachemean(x)
x <- makeVector(c(1, 2, 3, 4, 5))
cachemean(x)
cachemean(c(1,2,3,4,5))
cachemean(x
)
x <- makeVector(c(10, 20))
cachemean(x)
inverse()
source("cachematrix.R")
x <- makeCacheMatrix(matrix(c(1,2,3,4), 2, 2))
cacheSolve(x)
x
x$get()
source("cachematrix.R")
cacheSolve(x)
source("cachematrix.R")
cacheSolve(x)
x <- makeCacheMatrix(matrix(c(2,4,6,8), 2, 2))
cacheSolve(x)
x <- makeCacheMatrix(matrix(c(2,4,6,8), 2, 2))
cacheSolve(x)
source("cachematrix.R")
x <- makeCacheMatrix(matrix(c(2,4,6,8), 2, 2))
cacheSolve(x)
x <- makeCacheMatrix(matrix(c(1,2,3,4), 2, 2))
cacheSolve(x)
source("cachematrix.R")
x <- makeCacheMatrix(matrix(c(1,2,3,4), 2, 2))
cacheSolve(x)
x$get()
source("cachematrix.R")
x <- makeCacheMatrix(matrix(c(2,1,3,4), 2, 2))
x$get()
cacheSolve(x)
source("cachematrix.R")
makeCacheMatrix
dir()
setwd("ProgrammingAssignment2")
getwd()
dir()
source("cachematrix.R")
x <- makeCacheMatrix(matrix(c(2,4,5,6)))
cacheSolve(x)
x <- makeCacheMatrix(matrix(c(2,4,5,6)), 2, 2)
x <- makeCacheMatrix(matrix(c(2,4,5,6),2,2))
cacheSolve(x)
y <- makeCacheMatrix(matrix(c(2,4,5,6),2,2))
cacheSolve(y)
cacheSolve(y)
